*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="sqlproperties.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 0
	Left = 0
	Name = "Dataenvironment"
	Top = 0
	Width = 0

ENDDEFINE

DEFINE CLASS frmsqlproperties AS cfoxform OF "dataexplorerctrls.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="oConnectInfo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtServerName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboServerName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdOK" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdCancel" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cfoxlabel2" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cfoxlabel3" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtUsername" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtPassword" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkTrusted" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkShowColumnInfo" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cboDatabase" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblInstructions" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblServerName" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="lblDatabase" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSortObjects" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="chkSortColumns" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: loaddatabaselist
		*m: updatecontrols
		*p: cservername
		*p: lsuccess
		*p: onode
	*</DefinedPropArrayMethod>

	AlwaysOnTop = .T.
	AutoCenter = .T.
	Caption = "SQL Connection Properties"
	cservername = 
	Desktop = .T.
	DoCreate = .T.
	Height = 333
	MaxButton = .F.
	MinButton = .F.
	Name = "frmSQLProperties"
	onode = .NULL.
	Width = 374
	WindowType = 1

	ADD OBJECT 'cboDatabase' AS cfoxcombo WITH ;
		BoundColumn = 2, ;
		ColumnLines = .F., ;
		Format = "KT", ;
		Left = 91, ;
		Name = "cboDatabase", ;
		TabIndex = 5, ;
		Top = 31, ;
		Width = 247, ;
		ZOrderSet = 12
		*< END OBJECT: ClassLib="dataexplorerctrls.vcx" BaseClass="combobox" />

	ADD OBJECT 'cboServerName' AS cfoxcombo WITH ;
		BoundColumn = 2, ;
		ColumnLines = .F., ;
		Format = "KT", ;
		Left = 91, ;
		Name = "cboServerName", ;
		TabIndex = 3, ;
		Top = 7, ;
		Width = 247, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="dataexplorerctrls.vcx" BaseClass="combobox" />

	ADD OBJECT 'cfoxlabel2' AS cfoxlabel WITH ;
		Caption = "\<Login:", ;
		Height = 15, ;
		Left = 11, ;
		Name = "cfoxlabel2", ;
		TabIndex = 7, ;
		Top = 87, ;
		Width = 78, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="dataexplorerctrls.vcx" BaseClass="label" />

	ADD OBJECT 'cfoxlabel3' AS cfoxlabel WITH ;
		Caption = "\<Password:", ;
		Left = 11, ;
		Name = "cfoxlabel3", ;
		TabIndex = 9, ;
		Top = 111, ;
		Width = 78, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="dataexplorerctrls.vcx" BaseClass="label" />

	ADD OBJECT 'chkShowColumnInfo' AS cfoxcheckbox WITH ;
		Alignment = 0, ;
		Caption = "\<Show column info", ;
		Height = 17, ;
		Left = 94, ;
		Name = "chkShowColumnInfo", ;
		TabIndex = 12, ;
		Top = 224, ;
		Width = 220, ;
		ZOrderSet = 10
		*< END OBJECT: ClassLib="dataexplorerctrls.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSortColumns' AS cfoxcheckbox WITH ;
		Alignment = 0, ;
		Caption = "Sort \<columns", ;
		Height = 17, ;
		Left = 94, ;
		Name = "chkSortColumns", ;
		TabIndex = 13, ;
		Top = 269, ;
		Width = 198
		*< END OBJECT: ClassLib="dataexplorerctrls.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkSortObjects' AS cfoxcheckbox WITH ;
		Alignment = 0, ;
		Caption = "S\<ort objects (tables, views, stored procs, functions)", ;
		Height = 17, ;
		Left = 94, ;
		Name = "chkSortObjects", ;
		TabIndex = 13, ;
		Top = 246, ;
		Width = 266
		*< END OBJECT: ClassLib="dataexplorerctrls.vcx" BaseClass="checkbox" />

	ADD OBJECT 'chkTrusted' AS cfoxcheckbox WITH ;
		Alignment = 0, ;
		Caption = "\<Use Trusted Connection", ;
		Height = 17, ;
		Left = 91, ;
		Name = "chkTrusted", ;
		TabIndex = 6, ;
		Top = 63, ;
		Width = 220, ;
		ZOrderSet = 9
		*< END OBJECT: ClassLib="dataexplorerctrls.vcx" BaseClass="checkbox" />

	ADD OBJECT 'cmdCancel' AS cfoxbutton WITH ;
		Cancel = .T., ;
		Caption = "Cancel", ;
		Left = 292, ;
		Name = "cmdCancel", ;
		TabIndex = 15, ;
		Top = 301, ;
		ZOrderSet = 4
		*< END OBJECT: ClassLib="dataexplorerctrls.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdOK' AS cfoxbutton WITH ;
		Default = .T., ;
		Left = 216, ;
		Name = "cmdOK", ;
		TabIndex = 14, ;
		Top = 301, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="dataexplorerctrls.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'lblDatabase' AS cfoxlabel WITH ;
		Caption = "\<Database:", ;
		Height = 15, ;
		Left = 11, ;
		Name = "lblDatabase", ;
		TabIndex = 4, ;
		Top = 35, ;
		Width = 78, ;
		ZOrderSet = 14
		*< END OBJECT: ClassLib="dataexplorerctrls.vcx" BaseClass="label" />

	ADD OBJECT 'lblInstructions' AS cfoxlabel WITH ;
		Caption = "Select the default properties for SQL Server connections.", ;
		Height = 15, ;
		Left = 11, ;
		Name = "lblInstructions", ;
		TabIndex = 1, ;
		Top = 22, ;
		Visible = .F., ;
		Width = 312, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="dataexplorerctrls.vcx" BaseClass="label" />

	ADD OBJECT 'lblServerName' AS cfoxlabel WITH ;
		Caption = "\<Server name:", ;
		Height = 15, ;
		Left = 11, ;
		Name = "lblServerName", ;
		TabIndex = 1, ;
		Top = 11, ;
		Width = 78, ;
		ZOrderSet = 13
		*< END OBJECT: ClassLib="dataexplorerctrls.vcx" BaseClass="label" />

	ADD OBJECT 'oConnectInfo' AS csqlconnectionproperties WITH ;
		Height = 79, ;
		Left = 91, ;
		Name = "oConnectInfo", ;
		TabIndex = 11, ;
		Top = 139, ;
		Width = 270, ;
		ZOrderSet = 0, ;
		Cfoxlabel1.Name = "Cfoxlabel1", ;
		cfoxlabel2.Name = "cfoxlabel2", ;
		cfoxlabel3.Name = "cfoxlabel3", ;
		shpBorder.Name = "shpBorder", ;
		spnConnectTimeout.Name = "spnConnectTimeout", ;
		spnQueryTimeout.Name = "spnQueryTimeout"
		*< END OBJECT: ClassLib="dataexplorer.vcx" BaseClass="container" />

	ADD OBJECT 'txtPassword' AS cfoxtextbox WITH ;
		Height = 21, ;
		Left = 91, ;
		MaxLength = 50, ;
		Name = "txtPassword", ;
		PasswordChar = "*", ;
		TabIndex = 10, ;
		Top = 107, ;
		Width = 247, ;
		ZOrderSet = 8
		*< END OBJECT: ClassLib="dataexplorerctrls.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtServerName' AS cfoxtextbox WITH ;
		Height = 21, ;
		Left = 91, ;
		MaxLength = 100, ;
		Name = "txtServerName", ;
		ReadOnly = .T., ;
		TabIndex = 2, ;
		TabStop = .F., ;
		Top = 7, ;
		Visible = .F., ;
		Width = 247, ;
		ZOrderSet = 1
		*< END OBJECT: ClassLib="dataexplorerctrls.vcx" BaseClass="textbox" />

	ADD OBJECT 'txtUsername' AS cfoxtextbox WITH ;
		Height = 21, ;
		Left = 91, ;
		MaxLength = 50, ;
		Name = "txtUsername", ;
		TabIndex = 8, ;
		Top = 83, ;
		Width = 247, ;
		ZOrderSet = 7
		*< END OBJECT: ClassLib="dataexplorerctrls.vcx" BaseClass="textbox" />
	
	PROCEDURE Init
		* <oNode> = node object we're adjusting properties for
		* [cDisplayType] = "SERVER" for server only, "DEFAULT" for default connection properties
		#include "DataExplorer.h"
		LPARAMETERS oNode, cDisplayType
		
		DODEFAULT()
		
		THIS.BorderStyle = 2  && fixed dialog
		
		IF PCOUNT() > 0
			IF VARTYPE(cDisplayType) <> 'C'
				cDisplayType = ''
			ELSE
				cDisplayType = UPPER(cDisplayType)
			ENDIF
		
			THIS.oNode = oNode
			THIS.chkTrusted.Value  = oNode.GetOption("TrustedConnection", .T.)
			THIS.txtUsername.Value = oNode.GetOption("UserName", '')
			THIS.txtPassword.Value = oNode.GetOption("Password", '')
		
			THIS.oConnectInfo.ConnectTimeout = oNode.GetOption("ConnectTimeout", CONNECT_TIMEOUT_DEFAULT)
			THIS.oConnectInfo.QueryTimeout = oNode.GetOption("QueryTimeout", QUERY_TIMEOUT_DEFAULT)
		
			THIS.chkShowColumnInfo.Value = oNode.GetOption("ShowColumnInfo", .F.)
			THIS.chkSortObjects.Value = oNode.GetOption("SortObjects", .T.)
		
		   * RAS 29-Jul-2006, Added option to store column sorting separate from the other objects
		   this.chkSortColumns.Value = oNode.GetOption("SortColumns", .F.)
		
			THIS.cboServerName.Visible = cDisplayType <> "DEFAULT"
			THIS.lblServerName.Visible = cDisplayType <> "DEFAULT"
			
			THIS.cboDatabase.Visible = EMPTY(cDisplayType)
			THIS.lblDatabase.Visible = EMPTY(cDisplayType)
			
			THIS.lblInstructions.Visible = (cDisplayType == "DEFAULT")
			
			IF THIS.cboServerName.Visible
				THIS.cboServerName.DisplayValue = THIS.oNode.GetOption("ServerName", '')
			ENDIF
			
			IF THIS.cboDatabase.Visible
				THIS.cboDatabase.DisplayValue = THIS.oNode.GetOption("DatabaseName", '')
			ENDIF
			
			
		ELSE
			THIS.txtUserName.Value = ALLTRIM(SUBSTR(ID(), AT('#', ID()) + 1))
		ENDIF
		
		THIS.UpdateControls()
		
	ENDPROC

	PROCEDURE loaddatabaselist
		#include "foxpro.h"
		LOCAL oDatabaseList
		LOCAL i
		LOCAL nMouse
		LOCAL nIndex
		LOCAL cDatabaseName
		
		
		IF THIS.cboDatabase.Visible AND !(THIS.cboServerName.DisplayValue == THIS.cServerName)
			nMouse = THIS.MousePointer
			THIS.MousePointer = MOUSE_HOURGLASS
		
			cDatabaseName = UPPER(ALLTRIM(THIS.cboDatabase.DisplayValue))
		
			WITH THIS.cboDatabase
				.Clear()
				
				nIndex = 0
				IF !EMPTY(THIS.cboServerName.DisplayValue)
					oDatabaseList = THIS.oNode.GetAvailableDatabases(THIS.cboServerName.DisplayValue)
					IF VARTYPE(oDatabaseList) == 'O'
						FOR i = 1 TO oDatabaseList.Count
							.AddItem(oDatabaseList.Item(i).Name)
							
							IF nIndex == 0 AND UPPER(ALLTRIM(oDatabaseList.Item(i).Name)) == cDatabaseName
								nIndex = .NewIndex
							ENDIF
						ENDFOR
					ENDIF
				ENDIF
				.ListIndex = nIndex
			ENDWITH
			
			THIS.cServerName = THIS.cboServerName.DisplayValue
			
			THIS.MousePointer = nMouse
		ENDIF
		
		RETURN .T.
		
	ENDPROC

	PROCEDURE Unload
		DODEFAULT()
		
		RETURN THIS.lSuccess
	ENDPROC

	PROCEDURE updatecontrols
		IF THIS.chkTrusted.Value
			THIS.txtUserName.Value = ALLTRIM(SUBSTR(ID(), AT('#', ID()) + 1))
		ENDIF
		
		THIS.txtUserName.ReadOnly = THIS.chkTrusted.Value
		THIS.txtUserName.TabStop  = !THIS.chkTrusted.Value
		THIS.txtPassword.Enabled  = !THIS.chkTrusted.Value
		
		DO CASE
		CASE THIS.cboDatabase.Visible
			THIS.cmdOK.Enabled = !EMPTY(THIS.cboServerName.DisplayValue) AND !EMPTY(THIS.cboDatabase.DisplayValue)
		CASE THIS.cboServerName.Visible
			THIS.cmdOK.Enabled = !EMPTY(THIS.cboServerName.DisplayValue)
		OTHERWISE
			THIS.cmdOK.Enabled = .T.
		ENDCASE
		
		
	ENDPROC

	PROCEDURE cboDatabase.InteractiveChange
		THIS.Parent.UpdateControls()
	ENDPROC

	PROCEDURE cboServerName.DropDown
		#include "foxpro.h"
		LOCAL i
		LOCAL oServerList
		LOCAL nMouse
		
		nMouse = THIS.MousePointer
		THIS.MousePointer = MOUSE_HOURGLASS
		
		IF THIS.ListCount == 0 AND VARTYPE(THIS.Parent.oNode) == 'O'
			oServerList = THIS.Parent.oNode.GetAvailableServers()
			IF VARTYPE(oServerList) == 'O'
				FOR i = 1 TO oServerList.Count
					THIS.AddItem(oServerList.Item(i).Name)
				ENDFOR
				THIS.ListIndex = 1
			ENDIF
		ENDIF
		
		THIS.MousePointer = nMouse
		
	ENDPROC

	PROCEDURE cboServerName.InteractiveChange
		THIS.Parent.UpdateControls()
	ENDPROC

	PROCEDURE cboServerName.LostFocus
		THIS.Parent.LoadDatabaseList()
		THIS.Parent.UpdateControls()
		
	ENDPROC

	PROCEDURE chkShowColumnInfo.Click
		THIS.Parent.UpdateControls()
		
	ENDPROC

	PROCEDURE chkSortColumns.Click
		THIS.Parent.UpdateControls()
		
	ENDPROC

	PROCEDURE chkSortObjects.Click
		THIS.Parent.UpdateControls()
		
	ENDPROC

	PROCEDURE chkTrusted.Click
		THIS.Parent.UpdateControls()
		
	ENDPROC

	PROCEDURE cmdCancel.Click
		THIS.Parent.Release()
		
	ENDPROC

	PROCEDURE cmdOK.Click
		THIS.Parent.oNode.SetOption("ServerName", THIS.Parent.cboServerName.DisplayValue)
		IF THIS.Parent.cboDatabase.Visible
			THIS.Parent.oNode.SetOption("DatabaseName", THIS.Parent.cboDatabase.DisplayValue)
		ENDIF
		
		THIS.Parent.oNode.SetOption("TrustedConnection", THIS.Parent.chkTrusted.Value)
		IF THIS.Parent.chkTrusted.Value
			THIS.Parent.oNode.SetOption("Password", '')
		ELSE
			THIS.Parent.oNode.SetOption("UserName", THIS.Parent.txtUserName.Value)
			THIS.Parent.oNode.SetOption("Password", THIS.Parent.txtPassword.Value)
		ENDIF
		
		THIS.Parent.oNode.SetOption("ConnectTimeout", THIS.Parent.oConnectInfo.ConnectTimeout)
		THIS.Parent.oNode.SetOption("QueryTimeout", THIS.Parent.oConnectInfo.QueryTimeout)
		
		THIS.Parent.oNode.SetOption("ShowColumnInfo", THIS.Parent.chkShowColumnInfo.Value)
		THIS.Parent.oNode.SetOption("SortObjects", THIS.Parent.chkSortObjects.Value)
		
		* RAS 29-Jul-2006, added ability to sort the columns separate from the other database objects
		this.Parent.oNode.SetOption("SortColumns", this.Parent.chkSortColumns.Value)
		
		THIS.Parent.lSuccess = .T.
		
		THIS.Parent.Release()
		
	ENDPROC

	PROCEDURE txtServerName.InteractiveChange
		THIS.Parent.UpdateControls()
	ENDPROC

ENDDEFINE
