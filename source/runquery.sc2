*--------------------------------------------------------------------------------------------------------------------------------------------------------
* (ES) AUTOGENERADO - ¡¡ATENCIÓN!! - ¡¡NO PENSADO PARA EJECUTAR!! USAR SOLAMENTE PARA INTEGRAR CAMBIOS Y ALMACENAR CON HERRAMIENTAS SCM!!
* (EN) AUTOGENERATED - ATTENTION!! - NOT INTENDED FOR EXECUTION!! USE ONLY FOR MERGING CHANGES AND STORING WITH SCM TOOLS!!
*--------------------------------------------------------------------------------------------------------------------------------------------------------
*< FOXBIN2PRG: Version="1.19" SourceFile="runquery.scx" /> (Solo para binarios VFP 9 / Only for VFP 9 binaries)
*
*
DEFINE CLASS dataenvironment AS dataenvironment 
 	*< CLASSDATA: Baseclass="dataenvironment" Timestamp="" Scale="" Uniqueid="" ClassIcon="1" />

	DataSource = .NULL.
	Height = 200
	Left = 1
	Name = "Dataenvironment"
	Top = 220
	Width = 520

ENDDEFINE

DEFINE CLASS frmrunquery AS cfoxform OF "dataexplorerctrls.vcx" 
 	*< CLASSDATA: Baseclass="form" Timestamp="" Scale="" Uniqueid="" />

	*-- OBJECTDATA items order determines ZOrder / El orden de los items OBJECTDATA determina el ZOrder 
	*< OBJECTDATA: ObjPath="edtQuery" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfResults" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="pgfResults.cfoxpage1.edtMessages" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdClose" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="cmdRun" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="txtDatabase" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oLinksBar" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Cfoxlabel1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="Shape1" UniqueID="" Timestamp="" />
	*< OBJECTDATA: ObjPath="oDataLinksBar" UniqueID="" Timestamp="" />

	*<DefinedPropArrayMethod>
		*m: rundataaddin
		*m: runquery		&& Run the query.
		*m: runqueryaddin
		*m: setfont
		*m: showdataaddins
		*m: showqueryaddins
		*m: updatecontrols
		*m: updatelinksbar
		*p: odataexplorerengine
		*p: odatamgmt
		*p: _memberdata		&& XML Metadata for customizable properties
	*</DefinedPropArrayMethod>

	AlwaysOnTop = .T.
	AutoCenter = .T.
	Caption = "Run Query"
	cresourceid = DATAEXPLORER
	Desktop = .T.
	DoCreate = .T.
	Height = 418
	KeyPreview = .T.
	LockScreen = .F.
	MinHeight = 250
	MinWidth = 250
	Name = "frmRunQuery"
	odataexplorerengine = .NULL.
	odatamgmt = .NULL.
	ShowTips = .T.
	Width = 654
	_memberdata = <VFPData>
		<memberdata name="showdataaddins" type="method" display="ShowDataAddins"/>
		</VFPData>		&& XML Metadata for customizable properties

	ADD OBJECT 'Cfoxlabel1' AS cfoxlabel WITH ;
		Caption = "Database:", ;
		Height = 15, ;
		Left = 8, ;
		Name = "Cfoxlabel1", ;
		TabIndex = 8, ;
		Top = 8, ;
		Width = 69, ;
		ZOrderSet = 6
		*< END OBJECT: ClassLib="dataexplorerctrls.vcx" BaseClass="label" />

	ADD OBJECT 'cmdClose' AS cfoxbutton WITH ;
		Anchor = 8, ;
		Cancel = .T., ;
		Caption = "Close", ;
		Left = 578, ;
		Name = "cmdClose", ;
		TabIndex = 5, ;
		Top = 4, ;
		Width = 72, ;
		ZOrderSet = 2
		*< END OBJECT: ClassLib="dataexplorerctrls.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'cmdRun' AS cfoxbutton WITH ;
		Anchor = 8, ;
		Caption = "\<Run (F5)", ;
		Height = 23, ;
		Left = 503, ;
		Name = "cmdRun", ;
		Picture = bitmaps\run.bmp, ;
		PictureMargin = 1, ;
		PicturePosition = 1, ;
		TabIndex = 4, ;
		Top = 4, ;
		Width = 72, ;
		ZOrderSet = 3
		*< END OBJECT: ClassLib="dataexplorerctrls.vcx" BaseClass="commandbutton" />

	ADD OBJECT 'edtQuery' AS cfoxeditbox WITH ;
		AllowTabs = .T., ;
		Anchor = 10, ;
		EnableHyperlinks = .T., ;
		Height = 161, ;
		Left = 5, ;
		Name = "edtQuery", ;
		TabIndex = 1, ;
		Top = 57, ;
		Width = 644, ;
		ZOrderSet = 0
		*< END OBJECT: ClassLib="dataexplorerctrls.vcx" BaseClass="editbox" />

	ADD OBJECT 'oDataLinksBar' AS clinksbar WITH ;
		Anchor = 10, ;
		Enabled = .F., ;
		Height = 24, ;
		Left = 5, ;
		Name = "oDataLinksBar", ;
		TabIndex = 2, ;
		Top = 221, ;
		Width = 643, ;
		Clinkbutton1.Name = "Clinkbutton1", ;
		cmdMore.Name = "cmdMore"
		*< END OBJECT: ClassLib="dataexplorer.vcx" BaseClass="container" />

	ADD OBJECT 'oLinksBar' AS clinksbar WITH ;
		Anchor = 10, ;
		Height = 24, ;
		Left = 5, ;
		Name = "oLinksBar", ;
		TabIndex = 6, ;
		Top = 32, ;
		Width = 643, ;
		Clinkbutton1.Name = "Clinkbutton1", ;
		cmdMore.Name = "cmdMore"
		*< END OBJECT: ClassLib="dataexplorer.vcx" BaseClass="container" />

	ADD OBJECT 'pgfResults' AS cfoxpageframe WITH ;
		Anchor = 15, ;
		ErasePage = .T., ;
		Height = 169, ;
		Left = 5, ;
		Name = "pgfResults", ;
		TabIndex = 3, ;
		TabOrientation = 1, ;
		Top = 246, ;
		Width = 646, ;
		ZOrderSet = 1, ;
		cfoxpage1.Caption = "Messages", ;
		cfoxpage1.Name = "cfoxpage1"
		*< END OBJECT: ClassLib="dataexplorerctrls.vcx" BaseClass="pageframe" />

	ADD OBJECT 'pgfResults.cfoxpage1.edtMessages' AS cfoxeditbox WITH ;
		Anchor = 15, ;
		BorderStyle = 0, ;
		Height = 141, ;
		Left = 0, ;
		Name = "edtMessages", ;
		ReadOnly = .T., ;
		Top = 0, ;
		Width = 641
		*< END OBJECT: ClassLib="dataexplorerctrls.vcx" BaseClass="editbox" />

	ADD OBJECT 'Shape1' AS shape WITH ;
		Anchor = 10, ;
		Height = 2, ;
		Left = 5, ;
		Name = "Shape1", ;
		SpecialEffect = 0, ;
		Top = 29, ;
		Width = 644
		*< END OBJECT: BaseClass="shape" />

	ADD OBJECT 'txtDatabase' AS cfoxtextbox WITH ;
		Anchor = 10, ;
		Height = 21, ;
		Left = 82, ;
		Name = "txtDatabase", ;
		ReadOnly = .T., ;
		TabIndex = 7, ;
		TabStop = .F., ;
		Top = 5, ;
		Width = 411, ;
		ZOrderSet = 5
		*< END OBJECT: ClassLib="dataexplorerctrls.vcx" BaseClass="textbox" />
	
	PROCEDURE Init
		LPARAMETERS oDataMgmt, cSQL, lImmediate
		DODEFAULT()
		
		THIS.SetFont()
		
		IF VARTYPE(oDataMgmt) == 'O'
			THIS.oDataMgmt = oDataMgmt
		
			THIS.txtDatabase.Value = EVL(THIS.oDataMgmt.DatabaseName, THIS.oDataMgmt.StripPassword(THIS.oDataMgmt.ConnectionString))
		ENDIF
		
		IF VARTYPE(cSQL) == 'C'
			THIS.edtQuery.Value = cSQL
		ENDIF
		
		IF !EMPTY(THIS.edtQuery.Value) AND lImmediate
			THIS.RunQuery()
		ENDIF
		
		THIS.UpdateControls()
		THIS.UpdateLinksBar()
		
	ENDPROC

	PROCEDURE KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF nKeyCode == -4  && F5
			THIS.RunQuery()
		ENDIF
	ENDPROC

	PROCEDURE Resize
		
		
	ENDPROC

	PROCEDURE rundataaddin
		* Show query addins
		#include "DataExplorer.h"
		#include "foxpro.h"
		LPARAMETERS cUniqueID
		LOCAL i
		LOCAL oException
		LOCAL oDataExplorerEngine
		LOCAL oAddInList
		LOCAL nSelect
		PRIVATE oForm
		PRIVATE oParameter
		
		oForm = THISFORM
		oParameter = CREATEOBJECT("Empty")
		
		oDataExplorerEngine = NEWOBJECT("DataExplorerEngine", "DataExplorerEngine.prg")
		
		ADDPROPERTY(oParameter, "QueryText", THIS.edtQuery.Value)
		ADDPROPERTY(oParameter, "oDataMgmt", THIS.oDataMgmt)
		ADDPROPERTY(oParameter, "oDataExplorerEngine", oDataExplorerEngine)
		
		oAddInList = oDataExplorerEngine.GetAddIns(DEFTYPE_DATAADDIN)
		FOR i = 1 TO oAddInList.Count
			IF oAddInList.Item(i).UniqueID == cUniqueID
				TRY
		         * RAS 29-Sep-2006, added wrapper around code in case no result page exists
		         IF EMPTY(THIS.pgfResults.Pages(THIS.pgfResults.ActivePage).Tag)
		            * Nothing to do because there is no result set 
		            * One example of this is the Message page.
		         ELSE
		            nSelect = SELECT()
		         
		   			SELECT (THIS.pgfResults.Pages(THIS.pgfResults.ActivePage).Tag)
		
		   			EXECSCRIPT(oAddInList.Item(i).ScriptCode, oParameter)
		
		            SELECT (nSelect)
					ENDIF
		         
					THIS.edtQuery.Value = oParameter.QueryText
				CATCH TO oException
					MESSAGEBOX(RUNERROR_ADDIN_LOC + CHR(10) + CHR(10) + oException.Message + CHR(10) + oException.LineContents + " (" + TRANSFORM(oException.LineNo) + ")", MB_ICONEXCLAMATION, DATAEXPLORER_LOC + " - " + LOWER(m.oException.Procedure))
				ENDTRY
				EXIT
			ENDIF
		ENDFOR
		
		
		
	ENDPROC

	PROCEDURE runquery		&& Run the query.
		#include "foxpro.h"
		LOCAL nMouse
		LOCAL oResultCollection
		LOCAL i
		LOCAL loColumn
		LOCAL lcSQLToRun
		
		* RAS 19-Dec-2006, changed so the code run is selected text if there is selected text,
		* otherwise the code run is all the code in the query editbox.
		IF LENC(this.edtQuery.SelText) > 0
		   lcSQLToRun = this.edtQuery.SelText
		ELSE
		   lcSQLToRun = this.edtQuery.Value
		ENDIF
		
		*< IF !EMPTY(THIS.edtQuery.Value)
		IF !EMPTY(lcSQLToRun)
			nMouse = THISFORM.MousePointer
			THISFORM.MousePointer = MOUSE_HOURGLASS
			CLOSE DATABASES
			
			*< oResultCollection = THIS.oDataMgmt.ExecuteQuery(THIS.edtQuery.Value, '', THIS.DataSessionID)
		   oResultCollection = THIS.oDataMgmt.ExecuteQuery(lcSQLToRun, '', THIS.DataSessionID)
		
			THIS.LockScreen = .T.
		
			THIS.pgfResults.ActivePage = 1
			THIS.pgfResults.PageCount = 1
			THIS.pgfResults.CFoxPage1.edtMessages.Value = ''
		
			IF VARTYPE(oResultCollection) == 'O'
				THIS.pgfResults.PageCount = 1 + oResultCollection.Count
				THIS.pgfResults.ActivePage = IIF(oResultCollection.Count > 0, 2, 1)
				FOR i = 1 TO oResultCollection.Count
					THIS.pgfResults.Pages(1 + i).Caption = oResultCollection.Item(i)
					THIS.pgfResults.Pages(1 + i).Tag = oResultCollection.Item(i)
		
					THIS.pgfResults.Pages(1 + i).NewObject("grdData", "CQueryGrid", "DataExplorerCtrls.vcx")
					WITH THIS.pgfResults.Pages(1 + i).grdData as Grid 
						.FontName   = THIS.FontName
						.FontSize   = THIS.FontSize
						.FontBold   = THIS.FontBold
						.FontItalic = THIS.FontItalic
						.ColumnCount = -1
						.Left = 0
						.Top = 0
						.Width = THIS.pgfResults.PageWidth
						.Height = THIS.pgfResults.PageHeight
						.DeleteMark = .F.
						.GridLineColor = RGB(192,192,192)
						.GridLineWidth = 1
						.ForeColor = 0
						.ScrollBars = 3
		
						.Anchor = 15				
						.RecordSource = oResultCollection.Item(i)
						.ReadOnly = .T.
						.Visible = .T.
		            
		            * RAS 9-Oct-2006, fixed problem with grid not respecting the font attributes 
		            * selected by the end user of the query form.
		            FOR EACH loColumn IN .Columns FOXOBJECT 
		               loColumn.Header1.FontName   = THIS.FontName
		               loColumn.Header1.FontSize   = THIS.FontSize
		               loColumn.Header1.FontBold   = THIS.FontBold
		               loColumn.Header1.FontItalic = THIS.FontItalic
		            ENDFOR 
		            
		            .AutoFit()
		            .Refresh()
					ENDWITH
				ENDFOR
		
				THIS.oDataLinksBar.Enabled = .T.
			ENDIF
		
			* display any messages
		   *< RAS 19-Dec-2006, added error message if one exists so user understands there was
		   *< problem running the SQL code.
			*< THIS.pgfResults.CFoxPage1.edtMessages.Value = THIS.oDataMgmt.QueryResultOutput
		   THIS.pgfResults.CFoxPage1.edtMessages.Value = this.oDataMgmt.QueryResultOutput + ;
		                                                 this.oDataMgmt.LastError
			
			THIS.LockScreen = .F.
			THISFORM.MousePointer = nMouse
		ENDIF
		
		RETURN
	ENDPROC

	PROCEDURE runqueryaddin
		* Show query addins
		#include "DataExplorer.h"
		#include "foxpro.h"
		LPARAMETERS cUniqueID
		LOCAL i
		LOCAL oException
		LOCAL oDataExplorerEngine
		LOCAL oAddInList
		LOCAL oParameter
		PRIVATE oForm
		
		oDataExplorerEngine = NEWOBJECT("DataExplorerEngine", "DataExplorerEngine.prg")
		oAddInList = oDataExplorerEngine.GetAddIns(DEFTYPE_QUERYADDIN)
		FOR i = 1 TO oAddInList.Count
			IF oAddInList.Item(i).UniqueID == cUniqueID
				TRY
					oForm = THISFORM
					oParameter = CREATEOBJECT("Empty")
		
					ADDPROPERTY(oParameter, "QueryText", THIS.edtQuery.Value)
					ADDPROPERTY(oParameter, "oDataMgmt", THIS.oDataMgmt)
					ADDPROPERTY(oParameter, "oDataExplorerEngine", oDataExplorerEngine)
		
					EXECSCRIPT(oAddInList.Item(i).ScriptCode, oParameter)
					THIS.edtQuery.Value = oParameter.QueryText
				
		      CATCH TO oException
					MESSAGEBOX(RUNERROR_ADDIN_LOC + CHR(10) + CHR(10) + oException.Message + CHR(10) + oException.LineContents + " (" + TRANSFORM(oException.LineNo) + ")", MB_ICONEXCLAMATION, DATAEXPLORER_LOC + " - " + LOWER(m.oException.Procedure))
				ENDTRY
				
		      EXIT
			ENDIF
		ENDFOR
		
		
		
	ENDPROC

	PROCEDURE setfont
		* Abstract:
		*   Change the font.
		*
		* Parameters:
		*	None
		LOCAL oDataExplorerEngine
		
		oDataExplorerEngine = NEWOBJECT("DataExplorerEngine", "DataExplorerEngine.prg")
		
		THIS.FontName   = oDataExplorerEngine.cFontName
		THIS.FontSize   = oDataExplorerEngine.nFontSize
		THIS.FontBold   = 'B' $ oDataExplorerEngine.cFontStyle
		THIS.FontItalic = 'I' $ oDataExplorerEngine.cFontStyle
		
		WITH THIS.edtQuery
			.FontName   = THIS.FontName
			.FontSize   = THIS.FontSize
			.FontBold   = THIS.FontBold
			.FontItalic = THIS.FontItalic
		ENDWITH
		
		WITH THIS.pgfResults.Cfoxpage1.edtMessages
			.FontName   = THIS.FontName
			.FontSize   = THIS.FontSize
			.FontBold   = THIS.FontBold
			.FontItalic = THIS.FontItalic
		ENDWITH
		
	ENDPROC

	PROCEDURE showdataaddins
		* Show data addins
		#include "DataExplorer.h"
		#include "foxpro.h"
		
		LOCAL oMenuList
		LOCAL oContextMenu
		LOCAL i
		LOCAL oMenuItem
		LOCAL oException
		LOCAL oDataExplorerEngine
		LOCAL nSelect
		LOCAL cAlias
		PRIVATE oForm
		PRIVATE oParameter
		
		cAlias = THIS.pgfResults.Pages(THIS.pgfResults.ActivePage).Tag
		
		IF !EMPTY(cAlias)
			nSelect = SELECT()
			SELECT (cAlias)
		
			oParameter = CREATEOBJECT("Empty")
		
			oDataExplorerEngine = NEWOBJECT("DataExplorerEngine", "DataExplorerEngine.prg")
			ADDPROPERTY(oParameter, "oDataMgmt", THIS.oDataMgmt)
			ADDPROPERTY(oParameter, "oDataExplorerEngine", oDataExplorerEngine)
		
			oMenuList = oDataExplorerEngine.GetAddIns(DEFTYPE_DATAADDIN)
			IF oMenuList.Count > 0
				oContextMenu = NEWOBJECT("ContextMenu", "foxmenu.prg")
		
				FOR i = 1 TO oMenuList.Count
					oMenuItem = oContextMenu.AddMenu(oMenuList.Item(i).Caption,"oForm.RunDataAddIn([" + oMenuList.Item(i).UniqueID + "])")
					* oMenuItem.RunAsScript = .T.
				ENDFOR
				
				oForm = THISFORM
				TRY
					oContextMenu.Show()
				CATCH TO oException
					MESSAGEBOX(SHOWERROR_ADDIN_LOC + CHR(10) + CHR(10) + oException.Message, MB_ICONEXCLAMATION, DATAEXPLORER_LOC + " - " + LOWER(m.oException.Procedure))
				ENDTRY
			ENDIF
		
			SELECT (nSelect)
		ENDIF
	ENDPROC

	PROCEDURE showqueryaddins
		* Show query addins
		#include "DataExplorer.h"
		#include "foxpro.h"
		LOCAL oMenuList
		LOCAL oContextMenu
		LOCAL i
		LOCAL oMenuItem
		LOCAL oException
		LOCAL oDataExplorerEngine
		PRIVATE oForm
		
		oDataExplorerEngine = NEWOBJECT("DataExplorerEngine", "DataExplorerEngine.prg")
		
		
		oMenuList = oDataExplorerEngine.GetAddIns(DEFTYPE_QUERYADDIN)
		oContextMenu = NEWOBJECT("ContextMenu", "foxmenu.prg")
		
		oContextMenu.AddMenu("Cu\<t", _med_cut)
		oContextMenu.AddMenu("\<Copy", _med_copy)
		oContextMenu.AddMenu("\<Paste", _med_paste)
		IF oMenuList.Count > 0
			oContextMenu.AddMenu("\-")
		ENDIF
		
		
		FOR i = 1 TO oMenuList.Count
			oMenuItem = oContextMenu.AddMenu(oMenuList.Item(i).Caption, "oForm.RunQueryAddIn([" + oMenuList.Item(i).UniqueID + "])")
		ENDFOR
		
		oForm = THISFORM
		TRY
			oContextMenu.Show()
		CATCH TO oException
			MESSAGEBOX(SHOWERROR_ADDIN_LOC + CHR(10) + CHR(10) + oException.Message, MB_ICONEXCLAMATION, DATAEXPLORER_LOC + " - " + LOWER(m.oException.Procedure))
		ENDTRY
		
		
		
	ENDPROC

	PROCEDURE updatecontrols
		THIS.cmdRun.Enabled = !EMPTY(THIS.edtQuery.Value)
		
	ENDPROC

	PROCEDURE updatelinksbar
		#include "DataExplorer.h"
		#include "foxpro.h"
		LOCAL oMenuList
		LOCAL i
		LOCAL oDataExplorerEngine
		
		oDataExplorerEngine = NEWOBJECT("DataExplorerEngine", "DataExplorerEngine.prg")
		
		* query link bar
		THIS.oLinksBar.ClearButtons()
		oMenuList = oDataExplorerEngine.GetAddIns(DEFTYPE_QUERYADDIN)
		FOR i = 1 TO oMenuList.Count
			THIS.oLinksBar.AddButton(EVL(oMenuList.Item(i).ShortCaption, oMenuList.Item(i).Caption), oMenuList.Item(i).Caption, oMenuList.Item(i).AddInImage, oMenuList.Item(i).UniqueID)
		ENDFOR
		
		THIS.oLinksBar.OnResize()
		
		
		* data link bar
		THIS.oDataLinksBar.ClearButtons()
		oMenuList = oDataExplorerEngine.GetAddIns(DEFTYPE_DATAADDIN)
		FOR i = 1 TO oMenuList.Count
			THIS.oDataLinksBar.AddButton(EVL(oMenuList.Item(i).ShortCaption, oMenuList.Item(i).Caption), oMenuList.Item(i).Caption, oMenuList.Item(i).AddInImage, oMenuList.Item(i).UniqueID)
		ENDFOR
		
		THIS.oDataLinksBar.OnResize()
		
	ENDPROC

	PROCEDURE cmdClose.Click
		THIS.Parent.Release()
		
	ENDPROC

	PROCEDURE cmdRun.Click
		THIS.Parent.RunQuery()
		
		
	ENDPROC

	PROCEDURE edtQuery.InteractiveChange
		THISFORM.UpdateControls()
		
	ENDPROC

	PROCEDURE edtQuery.KeyPress
		LPARAMETERS nKeyCode, nShiftAltCtrl
		
		IF nKeyCode == 93 AND nShiftAltCtrl == 1 && shift-f10
			THIS.RightClick()
		ENDIF
	ENDPROC

	PROCEDURE edtQuery.RightClick
		THISFORM.ShowQueryAddIns()
		
	ENDPROC

	PROCEDURE oDataLinksBar.onselect
		LPARAMETERS cID
		
		THIS.Parent.RunDataAddIn(cID)
		
	ENDPROC

	PROCEDURE oLinksBar.onselect
		LPARAMETERS cID
		
		THIS.Parent.RunQueryAddIn(cID)
		
	ENDPROC

	PROCEDURE pgfResults.cfoxpage1.edtMessages.Init
		* THIS.DisabledBackColor = THIS.BackColor
		
	ENDPROC

	PROCEDURE pgfResults.RightClick
		THISFORM.ShowDataAddins()
		
	ENDPROC

ENDDEFINE
